syntax = "proto3";
package message_server;

// The service definition.
service MessageServer {
    rpc GetUsers (GetUsersRequest) returns (stream GetUsersResponse);
    rpc SendMessage (Message) returns (MessageResponse);
    rpc GetPendingMessage (PendingMessageRequest) returns (stream PendingMessageResponse);
    rpc MonitorMessages (MonitorMessagesRequest) returns (stream Message);
}

// Get Users
message GetUsersRequest {
    string username = 1;
}

message GetUsersResponse {
    enum GetUsersStatus {
        SUCCESS = 0;
        FAILURE = 1;
    }
    GetUsersStatus status = 1;
    string username = 2;
}

// For returning a list of something, we could use an rpc stream of an item?
message Message {
    string sender = 1;
    string recipient = 2;
    string message = 3;
    string timestamp = 4;
}

message MonitorMessagesRequest {
    string username = 1;
}

message MessageResponse {
    enum MessageStatus {
        SUCCESS = 0;
        FAILURE = 1;
    }
    MessageStatus status = 1;
}

message PendingMessageRequest {
    string username = 1;
}

message PendingMessageResponse {
    enum PendingMessageStatus {
        SUCCESS = 0;
        FAILURE = 1;
    }
    PendingMessageStatus status = 1;
    Message message = 2;
}


// python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. service.proto